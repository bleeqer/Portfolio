<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portfolio.mapper.AnswerCommentMapper">

    <insert id="insert" parameterType="CommentVO">

        <selectKey keyProperty="coNo" resultType="long" order="BEFORE">
            SELECT COMMENT_SEQ.NEXTVAL FROM dual
        </selectKey>

        INSERT INTO TB_ANSWER_COMMENT (co_no, ans_no, answer_comment, user_email, parent_co_no)
        VALUES (#{coNo}, #{ansNo}, #{answerComment}, #{userEmail}, #{parentCoNo})

    </insert>

    <select id="select" parameterType="long" resultMap="AnswerCommentResultMap">

        SELECT level,
               CO.co_no,
               CO.ans_no,
               CO.answer_comment,
               CO.parent_co_no,
               CO.reg_date,
               U.email,
               U.name,
               U.photo,
               U.occupation
        FROM tb_answer_comment CO, tb_user U
        WHERE CO.user_email = U.email
            AND CO.co_no = #{coNo}
        START WITH CO.parent_co_no = 0
        CONNECT BY PRIOR CO.co_no = CO.parent_co_no

    </select>

    <update id="update" parameterType="CommentVO">

        UPDATE tb_answer_comment SET answer_comment = #{answerComment}
        WHERE co_no = #{coNo}

    </update>

    <delete id="delete" parameterType="long">

        DELETE FROM TB_ANSWER_COMMENT
        WHERE co_no IN (SELECT co_no
                        FROM TB_ANSWER_COMMENT
                        START WITH co_no = #{coNo}
                        CONNECT BY PRIOR  co_no = parent_co_no)

    </delete>

    <select id="selectLastCoNo" parameterType="long" resultType="long">

        SELECT NVL(MAX(co_no), 0) co_no
        FROM TB_ANSWER_COMMENT
        WHERE ans_no = #{ansNo}

    </select>

    <select id="selectList" parameterType="CommentVO" resultMap="AnswerCommentResultMap">
        SELECT level,
            CO.co_no,
            CO.ans_no,
            CO.answer_comment,
            CO.parent_co_no,
            CO.reg_date,
            (SELECT NVL(SUM(CASE WHEN REC.like_type = 'UP' THEN 1 ELSE 0 END), 0) likes FROM tb_comment_like_rec REC WHERE REC.co_no = CO.co_no) likes,
            (SELECT NVL(SUM(CASE WHEN REC.like_type = 'DOWN' THEN 1 ELSE 0 END), 0) dislikes FROM tb_comment_like_rec REC WHERE REC.co_no = CO.co_no) dislikes,
            U.email,
            U.name,
            U.photo,
            U.occupation
        FROM tb_answer_comment CO, tb_user U
        WHERE U.email = CO.user_email
        START WITH CO.co_no IN (SELECT co_no
                                FROM (SELECT ROWNUM AS RN, co_no
                                      FROM tb_answer_comment
                                      WHERE parent_co_no = 0
                                            AND ans_no = #{ansNo}
                                        <if test="lastCoNo != null and lastCoNo != ''">
                                            AND co_no <![CDATA[>]]> #{lastCoNo}
                                        </if>
                                      ORDER BY co_no)
                                WHERE RN <![CDATA[<=]]> 3)
        CONNECT BY PRIOR CO.co_no = CO.parent_co_no
        ORDER SIBLINGS BY CO.co_no

    </select>

    <insert id="addLike" parameterType="CommentLikeVO">
        <selectKey keyProperty="likeNo" resultType="long" order="BEFORE">
            SELECT comment_like_seq.nextval FROM dual
        </selectKey>

        INSERT INTO tb_comment_like_rec (like_no, co_no, user_email, like_type)
        VALUES (#{likeNo}, #{coNo}, #{userEmail}, #{likeType})
    </insert>

    <delete id="deleteLike" parameterType="CommentLikeVO">
        DELETE FROM tb_comment_like_rec WHERE co_no = #{coNo} AND user_email = #{userEmail}
    </delete>

    <select id="findLike" parameterType="CommentLikeVO" resultMap="commentLikeResultMap">
        SELECT * FROM tb_comment_like_rec WHERE co_no = #{coNo} AND user_email = #{userEmail}
    </select>

    <update id="updateLike" parameterType="CommentLikeVO">
        UPDATE tb_comment_like_rec
        SET like_type = #{likeType}
        WHERE co_no = #{coNo} AND user_email = #{userEmail}
    </update>

    <select id="countLike" parameterType="CommentLikeVO" resultMap="likeCountMap">
        SELECT NVL(SUM(CASE WHEN like_type = 'UP' THEN 1 ELSE 0 END), 0) likes,
               NVL(SUM(CASE WHEN like_type = 'DOWN' THEN 1 ELSE 0 END), 0) dislikes
        FROM tb_comment_like_rec WHERE co_no = #{coNo}
    </select>

    <select id="checkLiked" parameterType="CommentVO" resultMap="commentLikeResultMap">

        SELECT *
        FROM tb_comment_like_rec
        WHERE co_no = #{coNo}
          AND user_email = #{userEmail}

    </select>

<!--    <select id="selectMoreList" parameterType="map" resultMap="AnswerReplyResultMap">-->
<!--        SELECT LEVEL, ANS_NO, COMMENT_NO, PARENT_COMMENT_NO, CONTENT, WRITER, LIKE_CNT, REG_DATE FROM TB_ANS_COMMENT-->
<!--            START WITH COMMENT_NO IN (-->
<!--                                        SELECT COMMENT_NO-->
<!--                                        FROM (-->
<!--                                                SELECT COMMENT_NO-->
<!--                                                FROM TB_ANS_COMMENT-->
<!--                                                WHERE co_no=#{coNo} AND COMMENT_NO<![CDATA[>]]>#{replyNo} AND PARENT_COMMENT_NO=0-->
<!--                                                ORDER BY COMMENT_NO-->
<!--                                             )-->
<!--                                        WHERE rownum<![CDATA[<=]]>4-->
<!--                                        )-->
<!--            CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO-->
<!--            ORDER SIBLINGS BY COMMENT_NO ASC-->
<!--    </select>-->

<!--&lt;!&ndash;    <select id="selectNestedMaxOrder" resultType="long" parameterType="long">&ndash;&gt;-->
<!--&lt;!&ndash;        SELECT NVL(MAX(comment_order), 0) FROM TB_ANS_COMMENT WHERE parent_comment_no=#{parentCommentNo}&ndash;&gt;-->
<!--&lt;!&ndash;    </select>&ndash;&gt;-->

<!--&lt;!&ndash;    <select id="selectMaxOrder" resultType="long" parameterType="long">&ndash;&gt;-->
<!--&lt;!&ndash;        SELECT NVL(MAX(comment_order), 0) FROM TB_ANS_COMMENT&ndash;&gt;-->
<!--&lt;!&ndash;    </select>&ndash;&gt;-->

<!--    <update id="update" parameterType="AnswerReplyVO">-->
<!--        UPDATE TB_ANS_COMMENT SET content = #{content}-->
<!--        WHERE comment_no=#{replyNo}-->
<!--    </update>-->

<!--    <delete id="delete" statementType="CALLABLE" parameterType="hashmap">-->
<!--        {-->
<!--            CALL PROC_DELETE_COMMENT(-->
<!--                #{replyNo}-->
<!--            )-->
<!--        }-->
<!--    </delete>-->

<!--    <select id="selectAll" resultType="AnswerReplyVO">-->
<!--        SELECT * FROM TB_ANS_COMMENT-->
<!--    </select>-->

<!--    <update id="addLike" parameterType="long">-->
<!--        UPDATE TB_ANS_COMMENT SET like_cnt=like_cnt + 1-->
<!--        WHERE comment_no=#{replyNo}-->
<!--    </update>-->

    <resultMap id="AnswerCommentResultMap" type="CommentVO">
        <id column="level" property="level"/>
        <id column="co_no" property="coNo"/>
        <id column="ans_no" property="ansNo"/>
        <id column="answer_comment" property="answerComment"/>
        <id column="parent_co_no" property="parentCoNo"/>
        <id column="reg_date" property="regDate"/>
        <id column="likes" property="likes"/>
        <id column="dislikes" property="dislikes"/>
        <id column="email" property="userEmail"/>
        <id column="name" property="userName"/>
        <id column="photo" property="userPhoto"/>
        <id column="occupation" property="userOccupation"/>
    </resultMap>

    <resultMap id="commentLikeResultMap" type="CommentLikeVO">
        <id column="co_no" property="coNo"/>
        <id column="user_email" property="userEmail"/>
        <id column="like_type" property="likeType"/>
    </resultMap>

    <resultMap id="likeCountMap" type="Hashmap">
        <id column="likes" property="likes" javaType="long"/>
        <id column="dislikes" property="dislikes" javaType="long"/>
    </resultMap>

</mapper>